sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_free
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
  - platform: version
  - platform: version
    name: version_available
    source: hassio

  - platform: glances
    host: "192.168.1.78"
    name: "Nuc"
    version: 3
    resources:
      - 'disk_use_percent'
      - 'memory_use_percent'
      - 'swap_use_percent'
      - 'processor_load'
      - 'docker_active'
      - 'docker_cpu_use'
      
  - platform: mqtt
    name: "Google Backup Results"
    state_topic: "googlebackup/result"
    value_template: "{{ value_json.backupTimestamp }}"
    json_attributes_topic: "googlebackup/result"
    
rest_command:
  google_backup:
    url: 'http://192.168.1.78:8055/gb/doBackup'
    timeout: '300'

automation:
  - alias: '[System] Hass Started'
    initial_state: 'on'
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: notify.hass_discord
        data:
          target: !secret discord_hass_id
          message: "@here Hass.io Online"

  - alias: '[System] Hass Ready'
    initial_state: 'on'
    trigger:
      platform: event
      event_type: zwave.network_ready
    action:
      - service: notify.hass_discord
        data:
          target: !secret discord_hass_id
          message: "Z-wave network now ready"
      - delay: 00:05
      - service: homekit.start
      
  - alias: '[System] Hass Stopped'
    initial_state: 'on'
    trigger:
      platform: homeassistant
      event: shutdown
    action:
      - service: notify.hass_discord
        data:
          target: !secret discord_hass_id
          message: "@here Hass.io Offline"
        
  - alias: '[System] Hass New Device Tracked'
    initial_state: 'on'
    trigger:
      platform: event
      event_type: device_tracker_new_device
    action:
      - service: notify.hass_discord
        data_template:
          message: >
            New Device Tracked: {{trigger.event.data.host_name}} ({{trigger.event.data.entity_id}})
          target: !secret discord_hass_id

  - alias: '[System] Hass Updater'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.version_available
    condition:
      - condition: template
        value_template: >-
          {{
            states('sensor.version_available')
            !=
            states('sensor.version_current')
          }}
    action:
      - service: notify.ios_isabellas_iphone_x
        data_template:
          title: Upgrade time!
          message: >-
            Hass.io version {{ states('sensor.version_available') }} is now available!
          data:
            attachment:
              content-type: png
              url: https://png2.kisspng.com/20180504/avq/kisspng-computer-icons-starburst-clip-art-the-store-to-upgrade-kuangshuai-5aecf79d6760f6.2104595515254793254235.png
      - service: notify.hass_discord
        data_template:
          target: !secret discord_hass_id
          message: "Home Assistant {{ states.sensor.version_available.state }} is now available!"

  - alias: '[System] Snapshot Create Nightly at 03 AM'
    initial_state: 'on'
    trigger:
      platform: time
      at: '03:00:00'
    action:
      - service: hassio.snapshot_full
        data_template:
          name: "Automated Snapshot {{ now().strftime('%Y-%m-%d') }}"
      - service: notify.hass_discord
        data_template:
          target: !secret discord_hass_id
          message: "Automated Snapshot {{ now().strftime('%Y-%m-%d') }}"
        
  - alias: '[System] Snapshot Upload Nightly at 0330 AM'
    initial_state: 'on'
    trigger:
      - platform: time
        at: '03:30:00'
    action:
      - service: rest_command.google_backup
      - service: notify.hass_discord
        data_template:
          target: !secret discord_hass_id
          message: >
            'Automatic snapshot uploaded'
          
  - alias: '[System] Ip Ban Notify'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: persistent_notification.ipban
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != off }}"
    action:
      - service: notify.hass_discord
        data_template:
          target: !secret discord_hass_id
          message: >
            '@here {{ trigger.state.attributes.message }}. Ip address has been banned.'